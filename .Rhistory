GDPData[!(GDPData$X==""),]
GDPDataOrg<-read.csv("getdata_data_GDP.csv",skip=3)
GDPData<-GDPDataOrg
GDPData$X<-as.character(GDPData$X)
GDPData[!(GDPData$X==""),]
GDPData$Ranking<-as.integer(as.character(GDPData$Ranking))
GDPData$Economy<-as.character(GDPData$Economy)
GDPData<-cbind(GDPData$X,GDPData$Ranking,GDPData$Economy)
View(GDPData)
GDPDataOrg<-read.csv("getdata_data_GDP.csv",skip=3)
GDPData<-GDPDataOrg
GDPData$X<-as.character(GDPData$X)
GDPData[!(GDPData$X==""),]
GDPData[!(GDPData$X==" "),]
GDPData[,~(GDPData$X==" ")]
GDPData[~(GDPData$X==" "),]
library(jpeg)
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg "
library(jpeg)
data<-readJPEG("getdata_jeff.jpg",native=TRUE)
data
head(data)
quantile(data,probs=seq(0.3,0.8))
quantile(data,probs=seq(0.8))
quantile(data,probs=c(0.3,0.8))
GDPDataOrg<-read.csv("getdata_data_GDP.csv",skip=3)
GDPData<-GDPDataOrg
GDPData$X
as.integer(GDPData$X)
temp<-as.integer(GDPData$X)==1
GDPData<-GDPData[temp,]
GDPData
GDPData<-GDPData[!temp,]
GDPData
GDPData<-GDPData[!temp]
GDPData<-GDPData[,!temp]
GDPData<-GDPData[,~temp]
~temp
!temp
GDPData[,!temp]
GDPData[!temp,]
GDPData<-GDPData[!temp,]
class(GDPData)
head(GDPData)
head(GDPData)
GDPDataOrg<-read.csv("getdata_data_GDP.csv",skip=3)
GDPData<-GDPDataOrg
GDPData<-GDPDataOrg
temp<-as.integer(GDPData$X)==1
GDPData<-GDPData[temp,]
View(GDPData)
GDPData<-GDPDataOrg
GDPData<-GDPData[,-c(3,6:10)]
head(GDPData)
which(as.integer(GDPData$X)==1)
GDPData<-GDPData[-which(as.integer(GDPData$X)==1),]
View(GDPData)
CountryData<-read.csv("getdata_data_EDSTATS_Country.csv")
GDPData$X<-as.character(GDPData$X)
CountryData$CountryCode<-as.character(CountryData$CountryCode)
num<-0
for (i in 1:length(GDPData$X)){
if(sum(GDPData$X[i]==CountryData$CountryCode)){
num<-num+1
}
}
GDPData
CountryData$Income.Group
unique(CountryData$Income.Group)
as.integer(CountryData$Income.Group)==1
as.integer(CountryData$Income.Group)==0
as.integer(CountryData$Income.Group)
OECD<-CountryData$CountryCode[temp==3]
temp<-as.integer(CountryData$Income.Group)
OECD<-CountryData$CountryCode[temp==3]
nonOECD<-CountryData$CountryCode[temp==2]
as.character(GDPData$Ranking)
as.integer(as.character(GDPData$Ranking))
GDPData$Ranking<-as.integer(as.character(GDPData$Ranking))
which(OECD[1]==GDPData$X)
num<-0
rank<-0
for (i in 1:length(OECD)){
temp<-which(OECD[i]==GDPData$X)
if(!is.na(GDPData$Ranking[temp])){
rank<-rank+GDPData$Ranking[temp]
}
}
num<-0
rank<-0
for (i in 1:length(OECD)){
temp<-which(OECD[i]==GDPData$X)
if(!is.na(GDPData$Ranking[temp])){
rank<-rank+GDPData$Ranking[temp]
num<-num+1
}
}
rank/num
num<-0
rank<-0
for (i in 1:length(nonOECD)){
temp<-which(nonOECD[i]==GDPData$X)
if(!is.na(GDPData$Ranking[temp])){
rank<-rank+GDPData$Ranking[temp]
num<-num+1
}
}
rank/num
quantile(GDPData$Ranking,probs=length(0,1,5))
quantile(GDPData$Ranking,probs=c(0.2,0.4,0.6,0.8,1))
quantile(GDPData$Ranking,probs=c(0.2,0.4,0.6,0.8,1),na.rm=TRUE)
table(CountryData$Income.Group)
num<-0
rank<-0
for (i in 1:38){
temp<-which(CountryData$CountryCode==GDPData$X[i])
if((as.integer(as.character(CountryData$Income.Group[temp])))==5){
num<-num+1
}
}
which(CountryData$CountryCode==GDPData$X)
which(CountryData$CountryCode==GDPData$X[1])
CountryData$Income.Group[220]
as.integer(as.character(CountryData$Income.Group[220]))
as.character(CountryData$Income.Group[220])
income<-as.integer(as.character(CountryData$Income.Group))
as.integer(as.character(CountryData$Income.Group))
for (i in 1:38){
temp<-which(CountryData$CountryCode==GDPData$X[i])
if((as.integer(CountryData$Income.Group[temp]))==5){
num<-num+1
}
}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
source("submitscript1.R")
submit()
submit
submit()
source("submitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source("complete.R")
complete("specdata", 1)
submit()
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
filenames<-list.files(directory, pattern=".csv")
dir<-paste(directory,filenames,sep="\\")
nobs<-rep(0,length(id))
result<-data.frame(id,nobs)
for(i in id){
data<-read.csv(dir[i])
result$nobs[result$id==i]<-sum((!is.na(data$sulfate))&
(!is.na(data$)))
}
source("complete.R")
complete("specdata", 1)
complete("specdata", 30:25)
submit()
submit()
submit()
submit()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
submit()
submit()
submit()
ls()
debug(ls)
ls()
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makefactor(x)
makeVector(x)
x<-c(0,1)
makeVector(x)
a<-makeVector(x)
a$get(1)
a$get(1)
a$get()
a$getmean()
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setsolve <- function(solve) m <<- solve
getsolve <- function() m
list(set = set, get = get,
setsolve = setsolve,
getsolve = getsolve)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getsolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setsolve(m)
m
}
x<-matrix(c(1,0,0,1),nrow=2,ncol=2)
x
x<-matrix(c(1,0,0,1),nrow=2,ncol==2)
x<-matrix(c(1,0,0,1),nrow=2,ncol=2)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setsolve <- function(solve) m <<- solve
getsolve <- function() m
list(set = set, get = get,
setsolve = setsolve,
getsolve = getsolve)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getsolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setsolve(m)
m
}
a<-makeCacheMatrix(x)
cacheSolve(a)
a$getsolve
a$getsolve()
setwd(".//getting-and-cleaning-data/")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
","DataSet.zip")
bodyAcc$x<-read.file(".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt")
bodyAcc$x<-read.table(".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt")
bodyAcc.x<-read.table(".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt")
bodyAcc.x<-read.table(".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt",
sep=" ")
bodyAcc.x<-read.table(".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt",
sep=" ",quote = "\"'")
bodyAcc.x<-read.table(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt",
sep=" ")
bodyAcc.x<-read.table(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt",
sep=" ",header=FALSE)
bodyAcc.x<-read.table(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt",
sep="\t",header=FALSE)
head(bodyAcc.x)
View(bodyAcc.x)
bodyAcc.x<-read.table(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt",
sep=" ",header=FALSE)
bodyAcc.x<-read.table(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt")
View(bodyAcc.x)
summary(bodyAcc.x)
bodyAcc.x<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt",
sep="\t",header=FALSE,widths=16)
View(bodyAcc.x)
head(bodyAcc.x)
bodyAcc.x.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.y.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_y_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.z.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_z_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.x.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_x_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.y.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_y_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.z.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_z_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.x.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.y.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_y_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.z.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_z_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.x.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_x_train.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.y.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_y_train.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.z.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_z_train.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc<-cbind(c(bodyAcc.x.test,bodyAcc.x.train),c(bodyAcc.x.test,bodyAcc.x.train),
0)
temp<-c(bodyAcc.x.test,bodyAcc.x.train)
temp<-past(bodyAcc.x.test,bodyAcc.x.train)
temp<-paste(bodyAcc.x.test,bodyAcc.x.train)
head(temp)
temp<-merge(bodyAcc.x.test,bodyAcc.x.train)
length<-length(bodyAcc.x.test)+length(bodyAcc.x.train)
size(bodyAcc.x.test)
length(bodyAcc.x.test)
length<-size(bodyAcc.x.test$V1)+length(bodyAcc.x.train$V1)
length<-length(bodyAcc.x.test$V1)+length(bodyAcc.x.train$V1)
bodyAcc<-data.frame(x=numeric(length),y=numeric(length),z=numeric(length))
View(bodyAcc)
bodyAcc$x[1:length(bodyAcc.x.test$V1)]<-bodyAcc.x.test
bodyAcc$x[1:length(bodyAcc.x.test$V1)]<-bodyAcc.x.test$V1
head(bodyAcc)
View(bodyAcc)
bodyAcc$x[1:length(bodyAcc.x.test$V1)]<-bodyAcc.x.test$V1
bodyAcc$x[length(bodyAcc.x.test$V1)+1:length]<-bodyAcc.x.train$V1
bodyAcc$x[1:length(bodyAcc.x.test$V1)]<-bodyAcc.x.test$V1
bodyAcc$x[length(bodyAcc.x.test$V1)+1:length]<-bodyAcc.x.train$V1
length(bodyAcc.x.test$V1)+1
length
10299-2948
bodyAcc$x[(length(bodyAcc.x.test$V1)+1):length]<-bodyAcc.x.train$V1
bodyAcc$x[1:length(bodyAcc.x.test$V1)]<-bodyAcc.x.test$V1
bodyAcc$x[(length(bodyAcc.x.test$V1)+1):length]<-bodyAcc.x.train$V1
bodyAcc$y[1:length(bodyAcc.y.test$V1)]<-bodyAcc.y.test$V1
bodyAcc$y[(length(bodyAcc.y.test$V1)+1):length]<-bodyAcc.y.train$V1
bodyAcc$z[1:length(bodyAcc.z.test$V1)]<-bodyAcc.z.test$V1
bodyAcc$z[(length(bodyAcc.z.test$V1)+1):length]<-bodyAcc.z.train$V1
View(bodyAcc)
bodyGyro.x.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_gyro_x_test.txt",
sep="\t",header=FALSE,widths=16)
bodyGyro.y.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_gyro_y_test.txt",
sep="\t",header=FALSE,widths=16)
bodyGyro.z.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_gyro_z_test.txt",
sep="\t",header=FALSE,widths=16)
bodyGyro.x.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_gyro_x_train.txt",
sep="\t",header=FALSE,widths=16)
bodyGyro.y.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_gyro_y_train.txt",
sep="\t",header=FALSE,widths=16)
bodyGyro.z.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_gyro_z_train.txt",
sep="\t",header=FALSE,widths=16)
length<-length(bodyGyro.x.test$V1)+length(bodyGyro.x.train$V1)
bodyGyro<-data.frame(x=numeric(length),y=numeric(length),z=numeric(length))
bodyGyro$x[1:length(bodyGyro.x.test$V1)]<-bodyGyro.x.test$V1
bodyGyro$x[(length(bodyGyro.x.test$V1)+1):length]<-bodyGyro.x.train$V1
bodyGyro$y[1:length(bodyGyro.y.test$V1)]<-bodyGyro.y.test$V1
bodyGyro$y[(length(bodyGyro.y.test$V1)+1):length]<-bodyGyro.y.train$V1
bodyGyro$z[1:length(bodyGyro.z.test$V1)]<-bodyGyro.z.test$V1
bodyGyro$z[(length(bodyGyro.z.test$V1)+1):length]<-bodyGyro.z.train$V1
View(bodyGyro)
totalAcc.x.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//total_acc_x_test.txt",
sep="\t",header=FALSE,widths=16)
totalAcc.y.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//total_acc_y_test.txt",
sep="\t",header=FALSE,widths=16)
totalAcc.z.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//total_acc_z_test.txt",
sep="\t",header=FALSE,widths=16)
totalAcc.x.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//total_acc_x_train.txt",
sep="\t",header=FALSE,widths=16)
totalAcc.y.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//total_acc_y_train.txt",
sep="\t",header=FALSE,widths=16)
totalAcc.z.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//total_acc_z_train.txt",
sep="\t",header=FALSE,widths=16)
length<-length(totalAcc.x.test$V1)+length(totalAcc.x.train$V1)
totalAcc<-data.frame(x=numeric(length),y=numeric(length),z=numeric(length))
totalAcc$x[1:length(totalAcc.x.test$V1)]<-totalAcc.x.test$V1
totalAcc$x[(length(totalAcc.x.test$V1)+1):length]<-totalAcc.x.train$V1
totalAcc$y[1:length(totalAcc.y.test$V1)]<-totalAcc.y.test$V1
totalAcc$y[(length(totalAcc.y.test$V1)+1):length]<-totalAcc.y.train$V1
totalAcc$z[1:length(totalAcc.z.test$V1)]<-totalAcc.z.test$V1
totalAcc$z[(length(totalAcc.z.test$V1)+1):length]<-totalAcc.z.train$V1
View(totalAcc)
bodyAccMean<-sapply(bodyAcc,mean)
mean(bodyAcc)
bodyAccMean.X<-mean(bodyAcc$x)
class(bodyAcc$x)
bodyAcc<-data.frame(x=numeric(length),y=numeric(length),z=numeric(length))
class(bodyAcc$x)
class(bodyAcc.x.test$V1)
bodyAcc$x[1:length(bodyAcc.x.test$V1)]<-bodyAcc.x.test$V1
bodyAcc$x[(length(bodyAcc.x.test$V1)+1):length]<-bodyAcc.x.train$V1
class(bodyAcc$x)
bodyAccMean.X<-mean(bodyAcc$x)
bodyAccMean<-mean(bodyAcc)
mean(bodyAcc)
sapply(bodyAcc,mean)
bodyAccSd<-sapply(bodyAcc,sd)
bodyGyroSd<-sapply(bodyGyro,sd)
totalAccSd<-sapply(totalAcc,sd)
bodyAccMean<-sapply(bodyAcc,mean)
bodyGyroMean<-sapply(bodyGyro,mean)
totalAccMean<-sapply(totalAcc,mean)
##body Acc
bodyAcc.x.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.y.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_y_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.z.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_z_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.x.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_x_train.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.y.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_y_train.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.z.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_z_train.txt",
sep="\t",header=FALSE,widths=16)
length<-length(bodyAcc.x.test$V1)+length(bodyAcc.x.train$V1)
bodyAcc<-data.frame(x=numeric(length),y=numeric(length),z=numeric(length))
bodyAcc$x[1:length(bodyAcc.x.test$V1)]<-bodyAcc.x.test$V1
bodyAcc$x[(length(bodyAcc.x.test$V1)+1):length]<-bodyAcc.x.train$V1
bodyAcc$y[1:length(bodyAcc.y.test$V1)]<-bodyAcc.y.test$V1
bodyAcc$y[(length(bodyAcc.y.test$V1)+1):length]<-bodyAcc.y.train$V1
bodyAcc$z[1:length(bodyAcc.z.test$V1)]<-bodyAcc.z.test$V1
bodyAcc$z[(length(bodyAcc.z.test$V1)+1):length]<-bodyAcc.z.train$V1
write.table(bodyAcc,file="./bodyAcc.txt",row.name=FALSE)
##body Acc
bodyAcc.x.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_x_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.y.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_y_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.z.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_acc_z_test.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.x.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_x_train.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.y.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_y_train.txt",
sep="\t",header=FALSE,widths=16)
bodyAcc.z.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_acc_z_train.txt",
sep="\t",header=FALSE,widths=16)
length<-length(bodyAcc.x.test$V1)+length(bodyAcc.x.train$V1)
bodyAcc<-data.frame(x=numeric(length),y=numeric(length),z=numeric(length))
bodyAcc$x[1:length(bodyAcc.x.test$V1)]<-bodyAcc.x.test$V1
bodyAcc$x[(length(bodyAcc.x.test$V1)+1):length]<-bodyAcc.x.train$V1
bodyAcc$y[1:length(bodyAcc.y.test$V1)]<-bodyAcc.y.test$V1
bodyAcc$y[(length(bodyAcc.y.test$V1)+1):length]<-bodyAcc.y.train$V1
bodyAcc$z[1:length(bodyAcc.z.test$V1)]<-bodyAcc.z.test$V1
bodyAcc$z[(length(bodyAcc.z.test$V1)+1):length]<-bodyAcc.z.train$V1
write.table(bodyAcc,file="./bodyAcc.txt",row.name=FALSE)
##body gyro
bodyGyro.x.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_gyro_x_test.txt",
sep="\t",header=FALSE,widths=16)
bodyGyro.y.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_gyro_y_test.txt",
sep="\t",header=FALSE,widths=16)
bodyGyro.z.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//body_gyro_z_test.txt",
sep="\t",header=FALSE,widths=16)
bodyGyro.x.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_gyro_x_train.txt",
sep="\t",header=FALSE,widths=16)
bodyGyro.y.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_gyro_y_train.txt",
sep="\t",header=FALSE,widths=16)
bodyGyro.z.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//body_gyro_z_train.txt",
sep="\t",header=FALSE,widths=16)
length<-length(bodyGyro.x.test$V1)+length(bodyGyro.x.train$V1)
bodyGyro<-data.frame(x=numeric(length),y=numeric(length),z=numeric(length))
bodyGyro$x[1:length(bodyGyro.x.test$V1)]<-bodyGyro.x.test$V1
bodyGyro$x[(length(bodyGyro.x.test$V1)+1):length]<-bodyGyro.x.train$V1
bodyGyro$y[1:length(bodyGyro.y.test$V1)]<-bodyGyro.y.test$V1
bodyGyro$y[(length(bodyGyro.y.test$V1)+1):length]<-bodyGyro.y.train$V1
bodyGyro$z[1:length(bodyGyro.z.test$V1)]<-bodyGyro.z.test$V1
bodyGyro$z[(length(bodyGyro.z.test$V1)+1):length]<-bodyGyro.z.train$V1
write.table(bodyGyro,file="./bodyGyro.txt",row.name=FALSE)
##totol acc
totalAcc.x.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//total_acc_x_test.txt",
sep="\t",header=FALSE,widths=16)
totalAcc.y.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//total_acc_y_test.txt",
sep="\t",header=FALSE,widths=16)
totalAcc.z.test<-read.fwf(file=".//UCI HAR Dataset//test//Inertial Signals//total_acc_z_test.txt",
sep="\t",header=FALSE,widths=16)
totalAcc.x.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//total_acc_x_train.txt",
sep="\t",header=FALSE,widths=16)
totalAcc.y.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//total_acc_y_train.txt",
sep="\t",header=FALSE,widths=16)
totalAcc.z.train<-read.fwf(file=".//UCI HAR Dataset//train//Inertial Signals//total_acc_z_train.txt",
sep="\t",header=FALSE,widths=16)
length<-length(totalAcc.x.test$V1)+length(totalAcc.x.train$V1)
totalAcc<-data.frame(x=numeric(length),y=numeric(length),z=numeric(length))
totalAcc$x[1:length(totalAcc.x.test$V1)]<-totalAcc.x.test$V1
totalAcc$x[(length(totalAcc.x.test$V1)+1):length]<-totalAcc.x.train$V1
totalAcc$y[1:length(totalAcc.y.test$V1)]<-totalAcc.y.test$V1
totalAcc$y[(length(totalAcc.y.test$V1)+1):length]<-totalAcc.y.train$V1
totalAcc$z[1:length(totalAcc.z.test$V1)]<-totalAcc.z.test$V1
totalAcc$z[(length(totalAcc.z.test$V1)+1):length]<-totalAcc.z.train$V1
write.table(totalAcc,file="./totalAcc.txt",row.name=FALSE)
## the verage of data
bodyAccMean<-sapply(bodyAcc,mean)
bodyGyroMean<-sapply(bodyGyro,mean)
totalAccMean<-sapply(totalAcc,mean)
bodyAccSd<-sapply(bodyAcc,sd)
bodyGyroSd<-sapply(bodyGyro,sd)
totalAccSd<-sapply(totalAcc,sd)
